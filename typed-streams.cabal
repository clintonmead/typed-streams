name:                 typed-streams
version:              0.1.0.0
synopsis:             A stream based replacement for lists
description:
  This is an (incomplete) stream based replacement for lists, but already includes significant
  functionality and can be faster than using lists in certain cases.
  .
  See "Data.Stream.Typed" for the most detailed documentation,
  and "Data.Stream" for a simpler interface.
license: MIT
license-file: LICENSE
copyright: Clinton Mead (2017)
homepage:
author:               Clinton Mead
maintainer:           clintonmead@gmail.com
category:             Data
build-type:           Simple
cabal-version:        >=1.10
tested-with: GHC == 8.0.2
bug-reports: https://github.com/clintonmead/generic-enum/issues

library
  exposed-modules: Data.Stream.Typed, Data.Stream
  build-depends:
    base == 4.9.*,
    array == 0.5.*,
    bytestring == 0.10.*,
    make-monofoldable-foldable == 0.1.*,
    mono-traversable == 1.0.*,
    generic-enum == 0.1.*,
    ghc-typelits-knownnat == 0.2.*,
    vector == 0.12.*
  hs-source-dirs:       src
  default-language:     Haskell2010

Test-Suite tests
  type: exitcode-stdio-1.0
  other-modules: Data.Stream.Typed, Data.Stream
  main-is: Tests.hs
  build-depends:
    base == 4.9.*,
    array == 0.5.*,
    bytestring == 0.10.*,
    make-monofoldable-foldable == 0.1.*,
    mono-traversable == 1.0.*,
    generic-enum == 0.1.*,
    ghc-typelits-knownnat == 0.2.*,
    vector == 0.12.*,
    criterion == 1.1.*
  hs-source-dirs:       src, test
  default-language:     Haskell2010
